{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/mars_rover_command_front_end-2/src/components/Rover_Map.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar x_previous;\nvar y_previous;\nvar rover_x;\nvar rover_y;\nvar alien_x;\nvar alien_y;\nvar color;\nvar canvas_initial_offset; // ensure @ (0,0) image of rover can fully displayed\n\ncanvas_initial_offset = 5; //x_previous=canvas_initial_offset;\n//y_previous=canvas_initial_offset;\n// var id_rover_array = new Array<number>();\n// var id_alien_array = new Array<number>();\n\n/* ------------- force useEffect to render (useful because useRef will prevent the change being noticed) ------------- */\n\nexport function useForceUpdate() {\n  _s();\n\n  const [, setTick] = useState(0);\n  const update = useCallback(() => {\n    setTick(tick => tick + 1);\n  }, []);\n  return update;\n}\n/* -------------------------------------------------  define canvas  ------------------------------------------------- */\n\n_s(useForceUpdate, \"C/PHpCb03UdT1Zvs8guPjcg6YZY=\");\n\n/* ----------------------------------------------  main function  start  ---------------------------------------------- */\nconst Map = _ref => {\n  _s2();\n\n  let {\n    width,\n    height\n  } = _ref;\n  const forceUpdate = useForceUpdate();\n  const [roverlocatex, setRoverlocateX] = useState([0]);\n  const [roverlocatey, setRoverlocateY] = useState([0]);\n  const [alienlocatex, setAlienlocateX] = useState([0]);\n  const [alienlocatey, setAlienlocateY] = useState([0]);\n  const [aliencolor, setAliencolor] = useState([]);\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      /* ------------------------------   obtain data from database - rover location   ------------------------------ */\n      const FetchRoverData = async () => {\n        try {\n          const res = await axios.get('https://us-central1-rover-back-end.cloudfunctions.net/rover_1');\n          setRoverlocateX(res.data[0]);\n          setRoverlocateY(res.data[1]); // if(id_rover_array.indexOf((res.data)[0]['id']) == -1){\n          //     console.log(\"rover id update\")\n          //     id_rover_array.push((res.data)[0]['id'])\n          //     forceUpdate();\n          // }\n          // else {\n          //     console.log(\"rover id exist\")\n          // }\n        } catch (error) {\n          console.log(\"error @ FetchRoverData @ map\", error);\n        }\n      };\n      /* ------------------------------   obtain data from database - alien location   ------------------------------ */\n\n\n      const FetchAlienData = async () => {\n        try {\n          const res1 = await axios.get('https://us-central1-rover-back-end.cloudfunctions.net/new_alien_app');\n          setAlienlocateX(res1.data['x-axis']);\n          setAlienlocateY(res1.data['y-axis']);\n          setAliencolor(res1.data['color']);\n          console.log(\"check_alien_data\", res1.data['color']); // if(id_alien_array.indexOf((res1.data)[0]['id']) == -1){\n          //     forceUpdate();\n          //     id_alien_array.push((res1.data)[0]['id'])\n          // }\n          // else {\n          //     console.log(\"alien id exist\")\n          // }\n        } catch (error) {\n          console.log(\"error @ FetchAlienData @ map\", error);\n        }\n      };\n      /* ----------------------   obtain coordinates where image is displayed - rover location   ---------------------- */\n\n\n      var roverlocate_x = roverlocatex.toString().split(\"\");\n      var roverlocate_y = roverlocatey.toString().split(\"\");\n\n      if (rover_x !== 5 + parseInt(roverlocate_x.join(\"\")) || rover_y !== 5 + parseInt(roverlocate_y.join(\"\"))) {\n        // if (5+parseInt(roverlocate_x.join(\"\"))-x_previous>=20 || 5+parseInt(roverlocate_y.join(\"\"))-y_previous>=20 ) {\n        x_previous = rover_x;\n        y_previous = rover_y;\n      } //}\n\n\n      rover_x = canvas_initial_offset + Math.abs(parseInt(roverlocate_x.join(\"\")) * 20); //+5: make sure full image/circle is displayed\n\n      rover_y = canvas_initial_offset + Math.abs(parseInt(roverlocate_y.join(\"\")) * 20);\n      /* ----------------------   obtain coordinates where image is displayed - alien location   ---------------------- */\n\n      var alienlocate_x = alienlocatex.toString().split(\"\");\n      var alienlocate_y = alienlocatey.toString().split(\"\");\n      alien_x = canvas_initial_offset + parseInt(alienlocate_x.join(\"\"));\n      alien_y = canvas_initial_offset + parseInt(alienlocate_y.join(\"\"));\n      var alien_color = aliencolor.toString().split(\"\");\n      color = alien_color.join(\"\");\n      /* -------------------------   clear previous image & draw new image - rover location   -------------------------*/\n\n      if (canvasRef.current) {\n        var canvas = canvasRef.current;\n        var map_drawing = canvas.getContext('2d');\n        var tmp = {\n          //use to resize image\n          width: 0,\n          height: 0\n        }; //forceUpdate();\n\n        var img = new Image();\n        img.src = 'image.png';\n        tmp.width = Math.floor(img.width * 0.05);\n        tmp.height = Math.floor(img.height * 0.05);\n\n        img.onload = function () {\n          // if(rover_x!==5 && rover_y!==5){\n          // if (rover_x-x_previous>=20 || rover_y-y_previous>=20 || rover_y==5 && rover_x==5 ) {\n          map_drawing.clearRect(x_previous, y_previous, tmp.width, tmp.height);\n          console.log('clear: x_pre-', x_previous, 'y_pre-', y_previous); // for debug\n\n          map_drawing.drawImage(img, rover_x, rover_y, tmp.width, tmp.height);\n          console.log('draw: x-', rover_x, 'y-', rover_y); // for debug\n          //}\n        }; //console.log('image width * height', tmp.width, tmp.height);\n\n        /* ------------------------   clear previous image & draw new image - alien location   ------------------------ */\n\n\n        if (map_drawing && (alien_x !== canvas_initial_offset || alien_y !== canvas_initial_offset)) {\n          map_drawing.beginPath(); // console.log('color', color);  // for debug\n\n          if (color === 'BUILDING') {\n            map_drawing.rect(alien_x, alien_y, 5, 5); //rectangular OR bulding drawing\n\n            map_drawing.fillStyle = 'white';\n          } else {\n            map_drawing.arc(alien_x, alien_y, 5, 0, 2 * Math.PI); //circle drawing\n\n            map_drawing.fillStyle = color;\n          }\n\n          map_drawing.fill();\n          map_drawing.stroke();\n        } else {\n          console.log('error loading contents');\n        }\n      }\n\n      FetchRoverData();\n      FetchAlienData();\n    }, 100000);\n    return () => clearInterval(intervalId); //This is important\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      height: height,\n      width: width\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 9\n  }, this);\n};\n/* -------------------------------------------------  canvas size  ------------------------------------------------- */\n\n\n_s2(Map, \"5UZ7AynvCFeN+vQwOrUlUNNzyxk=\", false, function () {\n  return [useForceUpdate];\n});\n\n_c = Map;\nMap.defaultProps = {\n  width: 400,\n  height: 500\n};\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","axios","x_previous","y_previous","rover_x","rover_y","alien_x","alien_y","color","canvas_initial_offset","useForceUpdate","setTick","update","tick","Map","width","height","forceUpdate","roverlocatex","setRoverlocateX","roverlocatey","setRoverlocateY","alienlocatex","setAlienlocateX","alienlocatey","setAlienlocateY","aliencolor","setAliencolor","canvasRef","intervalId","setInterval","FetchRoverData","res","get","data","error","console","log","FetchAlienData","res1","roverlocate_x","toString","split","roverlocate_y","parseInt","join","Math","abs","alienlocate_x","alienlocate_y","alien_color","current","canvas","map_drawing","getContext","tmp","img","Image","src","floor","onload","clearRect","drawImage","beginPath","rect","fillStyle","arc","PI","fill","stroke","clearInterval","defaultProps"],"sources":["/Users/david/Desktop/mars_rover_command_front_end-2/src/components/Rover_Map.tsx"],"sourcesContent":["import React,{useState,useEffect,useRef,useCallback} from 'react'\nimport axios from 'axios'\nvar x_previous: number;\nvar y_previous: number;\nvar rover_x: number;\nvar rover_y: number;\nvar alien_x: number;\nvar alien_y: number;\nvar color: string;\n\nvar canvas_initial_offset: number;     // ensure @ (0,0) image of rover can fully displayed\ncanvas_initial_offset=5;\n//x_previous=canvas_initial_offset;\n//y_previous=canvas_initial_offset;\n\n// var id_rover_array = new Array<number>();\n// var id_alien_array = new Array<number>();\n\n/* ------------- force useEffect to render (useful because useRef will prevent the change being noticed) ------------- */\nexport function useForceUpdate() {\n  const [, setTick] = useState(0);\n  const update = useCallback(() => {\n    setTick(tick => tick + 1);\n  }, [])\n  return update;\n}\n\n/* -------------------------------------------------  define canvas  ------------------------------------------------- */\ninterface CanvasProps {\n    width: number;\n    height: number;\n}\n\n/* ----------------------------------------------  main function  start  ---------------------------------------------- */\nconst Map = ({ width, height }: CanvasProps) => {\n\n    const forceUpdate = useForceUpdate();\n\n    const [roverlocatex, setRoverlocateX] = useState<number[]>([0]);\n    const [roverlocatey, setRoverlocateY] = useState<number[]>([0]);\n\n    const [alienlocatex, setAlienlocateX] = useState<number[]>([0]);\n    const [alienlocatey, setAlienlocateY] = useState<number[]>([0]);\n    const [aliencolor, setAliencolor] = useState<string[]>([]);\n\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n\n    useEffect(() => {\n\n        const intervalId = setInterval(() => {\n\n        /* ------------------------------   obtain data from database - rover location   ------------------------------ */\n        const FetchRoverData = async () => {\n            try {\n                const res = await axios.get('https://us-central1-rover-back-end.cloudfunctions.net/rover_1')\n                setRoverlocateX((res.data)[0])\n                setRoverlocateY((res.data)[1])\n                // if(id_rover_array.indexOf((res.data)[0]['id']) == -1){\n                //     console.log(\"rover id update\")\n                //     id_rover_array.push((res.data)[0]['id'])\n                //     forceUpdate();\n                // }\n                // else {\n                //     console.log(\"rover id exist\")\n                // }\n            } \n            catch (error) {\n                console.log(\"error @ FetchRoverData @ map\", error)\n            }\n        }\n\n        /* ------------------------------   obtain data from database - alien location   ------------------------------ */\n        const FetchAlienData = async () => {\n            try {\n                const res1 = await axios.get('https://us-central1-rover-back-end.cloudfunctions.net/new_alien_app')\n                setAlienlocateX((res1.data)['x-axis'])\n                setAlienlocateY((res1.data)['y-axis'])\n                setAliencolor((res1.data)['color'])\n                console.log(\"check_alien_data\", (res1.data)['color'])\n                // if(id_alien_array.indexOf((res1.data)[0]['id']) == -1){\n                //     forceUpdate();\n                //     id_alien_array.push((res1.data)[0]['id'])\n                // }\n                // else {\n                //     console.log(\"alien id exist\")\n                // }\n            }\n            catch (error) {\n                console.log(\"error @ FetchAlienData @ map\", error)\n            }\n        }\n\n        /* ----------------------   obtain coordinates where image is displayed - rover location   ---------------------- */\n        var roverlocate_x = roverlocatex.toString().split(\"\")\n        var roverlocate_y = roverlocatey.toString().split(\"\")\n        if (rover_x!==5+parseInt(roverlocate_x.join(\"\")) || rover_y!==5+parseInt(roverlocate_y.join(\"\")) ){\n           // if (5+parseInt(roverlocate_x.join(\"\"))-x_previous>=20 || 5+parseInt(roverlocate_y.join(\"\"))-y_previous>=20 ) {\n            x_previous=rover_x\n            y_previous=rover_y}\n        //}\n        rover_x = canvas_initial_offset+Math.abs(parseInt(roverlocate_x.join(\"\"))*20)    //+5: make sure full image/circle is displayed\n        rover_y = canvas_initial_offset+Math.abs(parseInt(roverlocate_y.join(\"\"))*20)\n\n        /* ----------------------   obtain coordinates where image is displayed - alien location   ---------------------- */\n        var alienlocate_x = alienlocatex.toString().split(\"\")\n        var alienlocate_y = alienlocatey.toString().split(\"\")\n        alien_x = canvas_initial_offset+parseInt(alienlocate_x.join(\"\"))\n        alien_y = canvas_initial_offset+parseInt(alienlocate_y.join(\"\"))\n        var alien_color = aliencolor.toString().split(\"\")\n        color = alien_color.join(\"\")\n\n        /* -------------------------   clear previous image & draw new image - rover location   -------------------------*/\n        if (canvasRef.current) {\n            var canvas = canvasRef.current;\n            var map_drawing = canvas.getContext('2d');  \n            var tmp = {     //use to resize image\n                width: 0,\n                height:0 }\n            //forceUpdate();\n            var img = new Image();\n            img.src = 'image.png';\n            tmp.width=Math.floor(img.width * 0.05)\n            tmp.height=Math.floor(img.height * 0.05)\n            img.onload = function() {\n                // if(rover_x!==5 && rover_y!==5){\n                // if (rover_x-x_previous>=20 || rover_y-y_previous>=20 || rover_y==5 && rover_x==5 ) {\n                    map_drawing!.clearRect(x_previous, y_previous, tmp.width, tmp.height);\n                    console.log('clear: x_pre-',x_previous, 'y_pre-', y_previous)  // for debug\n                    map_drawing!.drawImage(img, rover_x, rover_y, tmp.width,  tmp.height);\n                    console.log('draw: x-',rover_x, 'y-', rover_y);  // for debug\n                //}\n            };\n            //console.log('image width * height', tmp.width, tmp.height);\n           \n            /* ------------------------   clear previous image & draw new image - alien location   ------------------------ */\n            if(map_drawing && (alien_x!==canvas_initial_offset || alien_y!==canvas_initial_offset)){\n                map_drawing.beginPath();\n                // console.log('color', color);  // for debug\n                if (color==='BUILDING'){\n                    map_drawing.rect(alien_x, alien_y, 5, 5);     //rectangular OR bulding drawing\n                    map_drawing.fillStyle = 'white'\n                } else {\n                    map_drawing.arc(alien_x, alien_y, 5, 0, 2*Math.PI);     //circle drawing\n                    map_drawing.fillStyle = color\n                }\n                map_drawing.fill();\n                map_drawing.stroke();\n            }   else {console.log('error loading contents')}\n        }       \n        FetchRoverData()\n        FetchAlienData()\n        }, 100000);\n        return () => clearInterval(intervalId); //This is important\n    } );\n\n    return (\n        <div>\n            <canvas ref={canvasRef} height={height} width={width} />\n        </div>\n    );\n};\n\n/* -------------------------------------------------  canvas size  ------------------------------------------------- */\nMap.defaultProps = {\n    width: 400,\n    height: 500,\n};\n\nexport default Map;"],"mappings":"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"},"metadata":{},"sourceType":"module"}