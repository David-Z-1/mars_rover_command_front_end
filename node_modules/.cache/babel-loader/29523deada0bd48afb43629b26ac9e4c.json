{"ast":null,"code":"var _jsxFileName = \"/Users/jy/Desktop/frontend/mars_rover_command_front_end-1/mars_rover_command_front_end/src/components/Coordinates.tsx\";\nimport React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Avatar from '@mui/material/Avatar';\nimport './coordinates.css';\nimport Locate_alien from './locate_alien';\nimport Locate_rover from './locate_rover';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Coordinates = () => {\n  /*                  -----------get location of aliens-----------                  */\n  //   const [xaxis, setXaxis] = useState([]); //empty array\n  //   const fetchData = async () => {\n  //     const { data } = await axios.get('http://localhost:8000/alien');\n  //     setXaxis(data);\n  //   };\n  //   useEffect(() => {     // Trigger the fetchData after the initial render by using the useEffect hook\n  //     fetchData();\n  //   }, [xaxis]);\n  var xaxis = Locate_alien();\n  /*                  ------------get location of rover------------                  */\n  //   const [roverlocatex, setRoverlocateX] = useState([]);\n  //   const [roverlocatey, setRoverlocateY] = useState([]);\n  //   useEffect( ()=>{\n  //     const fetchData = async () => {\n  //         try {\n  //             const res = await axios.get('http://localhost:8000/rover')\n  //             setRoverlocateX((res.data)[0]['x-axis'])\n  //             setRoverlocateY((res.data)[0]['y-axis'])\n  //             console.log((res.data)[0]['y-axis'])\n  //             console.log((res.data)[0]['x-axis'])\n  //         } \n  //         catch (error) {\n  //             console.log(error)\n  //         }\n  //     }\n  //     fetchData()\n  // }, [] )\n\n  var roverlocate = Locate_rover();\n  var roverlocatex = roverlocate[0];\n  var roverlocatey = roverlocate[1];\n  /*         ------------display locations in x & y coordinates------------           */\n\n  return (\n    /*#__PURE__*/\n    // <div className='coordinates'>\n    //     <h2 className='title'> Alien Position </h2>\n    //     {xaxis.length > 0 ? (\n    //         <div className='content'>\n    //             {xaxis.map((x) => (\n    //                 <h2> x-axis: {x['x-axis']} | y-axis: {x['y-axis']} | type: {x['color']}</h2>\n    //             ))}\n    //         </div>\n    //     ):( <p className=\"loading\">Loading... </p>)}\n    //     <h2 className='title'> Rover Position </h2>\n    //         <div className='content'>\n    //                 <h2> x-axis: {roverlocatex} | y-axis: {roverlocatey}</h2>\n    //         </div>\n    // </div>\n    _jsxDEV(Paper, {\n      elevation: 3,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        direction: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Alien Position\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n          alt: \"Travis Howard\",\n          src: \"image.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_c = Coordinates;\nexport default Coordinates;\n\nvar _c;\n\n$RefreshReg$(_c, \"Coordinates\");","map":{"version":3,"names":["React","Paper","Grid","Avatar","Locate_alien","Locate_rover","Coordinates","xaxis","roverlocate","roverlocatex","roverlocatey"],"sources":["/Users/jy/Desktop/frontend/mars_rover_command_front_end-1/mars_rover_command_front_end/src/components/Coordinates.tsx"],"sourcesContent":["import React,{useState,useEffect} from 'react'\nimport axios from 'axios'\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid'\nimport Avatar from '@mui/material/Avatar';\nimport './coordinates.css'\nimport Locate_alien from './locate_alien'\nimport Locate_rover from './locate_rover'\n\nconst Coordinates = () => {\n  /*                  -----------get location of aliens-----------                  */\n//   const [xaxis, setXaxis] = useState([]); //empty array\n//   const fetchData = async () => {\n//     const { data } = await axios.get('http://localhost:8000/alien');\n//     setXaxis(data);\n//   };\n//   useEffect(() => {     // Trigger the fetchData after the initial render by using the useEffect hook\n//     fetchData();\n//   }, [xaxis]);\n    var xaxis = Locate_alien()\n\n  /*                  ------------get location of rover------------                  */\n//   const [roverlocatex, setRoverlocateX] = useState([]);\n//   const [roverlocatey, setRoverlocateY] = useState([]);\n//   useEffect( ()=>{\n//     const fetchData = async () => {\n//         try {\n//             const res = await axios.get('http://localhost:8000/rover')\n//             setRoverlocateX((res.data)[0]['x-axis'])\n//             setRoverlocateY((res.data)[0]['y-axis'])\n//             console.log((res.data)[0]['y-axis'])\n//             console.log((res.data)[0]['x-axis'])\n//         } \n//         catch (error) {\n//             console.log(error)\n//         }\n//     }\n//     fetchData()\n// }, [] )\n    var roverlocate = Locate_rover()\n    var roverlocatex = roverlocate[0]\n    var roverlocatey = roverlocate[1]\n\n/*         ------------display locations in x & y coordinates------------           */\n    return (\n        // <div className='coordinates'>\n        //     <h2 className='title'> Alien Position </h2>\n        //     {xaxis.length > 0 ? (\n        //         <div className='content'>\n        //             {xaxis.map((x) => (\n        //                 <h2> x-axis: {x['x-axis']} | y-axis: {x['y-axis']} | type: {x['color']}</h2>\n        //             ))}\n        //         </div>\n        //     ):( <p className=\"loading\">Loading... </p>)}\n        //     <h2 className='title'> Rover Position </h2>\n        //         <div className='content'>\n        //                 <h2> x-axis: {roverlocatex} | y-axis: {roverlocatey}</h2>\n        //         </div>\n        // </div>\n        <Paper elevation={3}>\n            <Grid direction=\"row\">\n                <h1>Alien Position</h1>\n                <Avatar alt=\"Travis Howard\" src=\"image.png\" />\n\n            </Grid>\n        </Paper>\n\n    )\n}\n\nexport default Coordinates"],"mappings":";AAAA,OAAOA,KAAP,MAAuC,OAAvC;AAEA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAO,mBAAP;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EACxB;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACI,IAAIC,KAAK,GAAGH,YAAY,EAAxB;EAEF;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACI,IAAII,WAAW,GAAGH,YAAY,EAA9B;EACA,IAAII,YAAY,GAAGD,WAAW,CAAC,CAAD,CAA9B;EACA,IAAIE,YAAY,GAAGF,WAAW,CAAC,CAAD,CAA9B;EAEJ;;EACI;IAAA;IACI;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAC,KAAD;MAAO,SAAS,EAAE,CAAlB;MAAA,uBACI,QAAC,IAAD;QAAM,SAAS,EAAC,KAAhB;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,MAAD;UAAQ,GAAG,EAAC,eAAZ;UAA4B,GAAG,EAAC;QAAhC;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EAfJ;AAwBH,CA3DD;;KAAMF,W;AA6DN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}