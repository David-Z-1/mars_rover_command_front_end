{"ast":null,"code":"var _jsxFileName = \"/Users/jy/Desktop/frontend/mars_rover_command_front_end/src/components/Coordinates.tsx\";\nimport React from 'react';\nimport './coordinates.css';\nimport Locate_alien from './locate_alien';\nimport Locate_rover from './locate_rover';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Coordinates = () => {\n  /*                  -----------get location of aliens-----------                  */\n  //   const [xaxis, setXaxis] = useState([]); //empty array\n  //   const fetchData = async () => {\n  //     const { data } = await axios.get('http://localhost:8000/alien');\n  //     setXaxis(data);\n  //   };\n  //   useEffect(() => {     // Trigger the fetchData after the initial render by using the useEffect hook\n  //     fetchData();\n  //   }, [xaxis]);\n  var xaxis = Locate_alien();\n  /*                  ------------get location of rover------------                  */\n  //   const [roverlocatex, setRoverlocateX] = useState([]);\n  //   const [roverlocatey, setRoverlocateY] = useState([]);\n  //   useEffect( ()=>{\n  //     const fetchData = async () => {\n  //         try {\n  //             const res = await axios.get('http://localhost:8000/rover')\n  //             setRoverlocateX((res.data)[0]['x-axis'])\n  //             setRoverlocateY((res.data)[0]['y-axis'])\n  //             console.log((res.data)[0]['y-axis'])\n  //             console.log((res.data)[0]['x-axis'])\n  //         } \n  //         catch (error) {\n  //             console.log(error)\n  //         }\n  //     }\n  //     fetchData()\n  // }, [] )\n\n  var roverlocate = Locate_rover();\n  var roverlocatex = roverlocate[0];\n  var roverlocatey = roverlocate[1];\n  /*         ------------display locations in x & y coordinates------------           */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"coordinates\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \" Coordinates of Aliens \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), xaxis.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: xaxis.map(x => /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" x-axis: \", x['x-axis'], \"; | y-axis: \", x['y-axis'], \"; | type: \", x['color']]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading\",\n      children: \"Loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \" Location of Rover \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" x-axis: \", roverlocatex, \"; | y-axis: \", roverlocatey, \";\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Coordinates;\nexport default Coordinates;\n\nvar _c;\n\n$RefreshReg$(_c, \"Coordinates\");","map":{"version":3,"names":["React","Locate_alien","Locate_rover","Coordinates","xaxis","roverlocate","roverlocatex","roverlocatey","length","map","x"],"sources":["/Users/jy/Desktop/frontend/mars_rover_command_front_end/src/components/Coordinates.tsx"],"sourcesContent":["import React,{useState,useEffect} from 'react'\nimport axios from 'axios'\nimport './coordinates.css'\nimport Locate_alien from './locate_alien'\nimport Locate_rover from './locate_rover'\n\nconst Coordinates = () => {\n  /*                  -----------get location of aliens-----------                  */\n//   const [xaxis, setXaxis] = useState([]); //empty array\n//   const fetchData = async () => {\n//     const { data } = await axios.get('http://localhost:8000/alien');\n//     setXaxis(data);\n//   };\n//   useEffect(() => {     // Trigger the fetchData after the initial render by using the useEffect hook\n//     fetchData();\n//   }, [xaxis]);\n    var xaxis = Locate_alien()\n\n  /*                  ------------get location of rover------------                  */\n//   const [roverlocatex, setRoverlocateX] = useState([]);\n//   const [roverlocatey, setRoverlocateY] = useState([]);\n//   useEffect( ()=>{\n//     const fetchData = async () => {\n//         try {\n//             const res = await axios.get('http://localhost:8000/rover')\n//             setRoverlocateX((res.data)[0]['x-axis'])\n//             setRoverlocateY((res.data)[0]['y-axis'])\n//             console.log((res.data)[0]['y-axis'])\n//             console.log((res.data)[0]['x-axis'])\n//         } \n//         catch (error) {\n//             console.log(error)\n//         }\n//     }\n//     fetchData()\n// }, [] )\n    var roverlocate = Locate_rover()\n    var roverlocatex = roverlocate[0]\n    var roverlocatey = roverlocate[1]\n\n/*         ------------display locations in x & y coordinates------------           */\n    return (\n        <div className='coordinates'>\n            <h2 className='title'> Coordinates of Aliens </h2>\n            {xaxis.length > 0 ? (\n                <div className='content'>\n                    {xaxis.map((x) => (\n                        <h2> x-axis: {x['x-axis']}; | y-axis: {x['y-axis']}; | type: {x['color']}</h2>\n                    ))}\n                </div>\n            ):( <p className=\"loading\">Loading... </p>)}\n            <h2 className='title'> Location of Rover </h2>\n                <div className='content'>\n                        <h2> x-axis: {roverlocatex}; | y-axis: {roverlocatey};</h2>\n                </div>\n        </div>\n    )\n}\n\nexport default Coordinates"],"mappings":";AAAA,OAAOA,KAAP,MAAuC,OAAvC;AAEA,OAAO,mBAAP;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EACxB;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACI,IAAIC,KAAK,GAAGH,YAAY,EAAxB;EAEF;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACI,IAAII,WAAW,GAAGH,YAAY,EAA9B;EACA,IAAII,YAAY,GAAGD,WAAW,CAAC,CAAD,CAA9B;EACA,IAAIE,YAAY,GAAGF,WAAW,CAAC,CAAD,CAA9B;EAEJ;;EACI,oBACI;IAAK,SAAS,EAAC,aAAf;IAAA,wBACI;MAAI,SAAS,EAAC,OAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EAEKD,KAAK,CAACI,MAAN,GAAe,CAAf,gBACG;MAAK,SAAS,EAAC,SAAf;MAAA,UACKJ,KAAK,CAACK,GAAN,CAAWC,CAAD,iBACP;QAAA,wBAAcA,CAAC,CAAC,QAAD,CAAf,kBAAuCA,CAAC,CAAC,QAAD,CAAxC,gBAA8DA,CAAC,CAAC,OAAD,CAA/D;MAAA;QAAA;QAAA;QAAA;MAAA,QADH;IADL;MAAA;MAAA;MAAA;IAAA,QADH,gBAMG;MAAG,SAAS,EAAC,SAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QARR,eASI;MAAI,SAAS,EAAC,OAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QATJ,eAUQ;MAAK,SAAS,EAAC,SAAf;MAAA,uBACQ;QAAA,wBAAcJ,YAAd,kBAAwCC,YAAxC;MAAA;QAAA;QAAA;QAAA;MAAA;IADR;MAAA;MAAA;MAAA;IAAA,QAVR;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAgBH,CAnDD;;KAAMJ,W;AAqDN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}