[{"/Users/david/Desktop/mars_rover_command_front_end-5/src/index.tsx":"1","/Users/david/Desktop/mars_rover_command_front_end-5/src/reportWebVitals.ts":"2","/Users/david/Desktop/mars_rover_command_front_end-5/src/App.tsx":"3","/Users/david/Desktop/mars_rover_command_front_end-5/src/Web.tsx":"4","/Users/david/Desktop/mars_rover_command_front_end-5/src/Grid.tsx":"5","/Users/david/Desktop/mars_rover_command_front_end-5/src/components/firebaseConfig.tsx":"6","/Users/david/Desktop/mars_rover_command_front_end-5/src/components/Rover_Map.tsx":"7","/Users/david/Desktop/mars_rover_command_front_end-5/src/components/Coordinates.tsx":"8","/Users/david/Desktop/mars_rover_command_front_end-5/src/components/Database.tsx":"9","/Users/david/Desktop/mars_rover_command_front_end-5/src/components/Mannual.tsx":"10","/Users/david/Desktop/mars_rover_command_front_end-5/src/components/Title.tsx":"11","/Users/david/Desktop/mars_rover_command_front_end-5/src/components/locate_rover.tsx":"12","/Users/david/Desktop/mars_rover_command_front_end-5/src/components/locate_alien.tsx":"13","/Users/david/Desktop/mars_rover_command_front_end-5/src/components/Radar.tsx":"14","/Users/david/Desktop/mars_rover_command_front_end-5/src/components/Timer.tsx":"15","/Users/david/Desktop/mars_rover_command_front_end-5/src/components/timer.tsx":"16","/Users/david/Desktop/mars_rover_command_front_end-5/src/components/Signal.tsx":"17","/Users/david/Desktop/mars_rover_command_front_end-5/src/components/Battery_Level.tsx":"18"},{"size":554,"mtime":1655768195442,"results":"19","hashOfConfig":"20"},{"size":425,"mtime":1655768195445,"results":"21","hashOfConfig":"20"},{"size":432,"mtime":1655768195255,"results":"22","hashOfConfig":"20"},{"size":5733,"mtime":1655768195429,"results":"23","hashOfConfig":"20"},{"size":736,"mtime":1655826770744,"results":"24","hashOfConfig":"20"},{"size":717,"mtime":1655768195442,"results":"25","hashOfConfig":"20"},{"size":9155,"mtime":1655821640263,"results":"26","hashOfConfig":"20"},{"size":4454,"mtime":1655821598307,"results":"27","hashOfConfig":"20"},{"size":1010,"mtime":1655925950824,"results":"28","hashOfConfig":"20"},{"size":8236,"mtime":1655821598463,"results":"29","hashOfConfig":"20"},{"size":276,"mtime":1655768195441,"results":"30","hashOfConfig":"20"},{"size":1001,"mtime":1655769848551,"results":"31","hashOfConfig":"20"},{"size":491,"mtime":1655769848551,"results":"32","hashOfConfig":"20"},{"size":470,"mtime":1655768381201,"results":"33","hashOfConfig":"20"},{"size":766,"mtime":1655821637988,"results":"34","hashOfConfig":"20"},{"size":766,"mtime":1655821637988,"results":"35","hashOfConfig":"20"},{"size":1908,"mtime":1655925305316,"results":"36","hashOfConfig":"20"},{"size":412,"mtime":1655925403613,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"veeytw",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"41"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"41"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"41"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"41"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"41"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/david/Desktop/mars_rover_command_front_end-5/src/index.tsx",[],[],[],"/Users/david/Desktop/mars_rover_command_front_end-5/src/reportWebVitals.ts",[],[],"/Users/david/Desktop/mars_rover_command_front_end-5/src/App.tsx",["101"],[],"import React, { useState } from 'react';\nimport Web from './Web'\nimport Grid from './Grid'\nimport { BrowserRouter as Router, Routes, Route} from 'react-router-dom';\n\nexport default function App(){ \n\n  const [status, setStatus] = useState(false);\n  return(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Web setStatus={setStatus}/>}/>\n        <Route path=\"/Grid\" element={<Grid/>}/>\n      </Routes>\n    </Router>\n  )\n}","/Users/david/Desktop/mars_rover_command_front_end-5/src/Web.tsx",[],[],"/Users/david/Desktop/mars_rover_command_front_end-5/src/Grid.tsx",[],[],"/Users/david/Desktop/mars_rover_command_front_end-5/src/components/firebaseConfig.tsx",[],[],"/Users/david/Desktop/mars_rover_command_front_end-5/src/components/Rover_Map.tsx",["102","103"],[],"import React,{useState,useEffect,useRef,useCallback} from 'react'\nimport axios from 'axios'\nimport moment from \"moment\"\nvar x_previous: number;\nvar y_previous: number;\nvar rover_x: number;\nvar rover_y: number;\nvar alien_x: number;\nvar alien_y: number;\nvar radar_x: number;\nvar radar_y: number;\nvar color: string;\n\nvar canvas_initial_offset: number;     // ensure @ (0,0) image of rover can fully displayed\ncanvas_initial_offset=5;\n//x_previous=canvas_initial_offset;\n//y_previous=canvas_initial_offset;\n\n// var id_rover_array = new Array<number>();\n// var id_alien_array = new Array<number>();\n\n/* ------------- force useEffect to render (useful because useRef will prevent the change being noticed) ------------- */\nexport function useForceUpdate() {\n  const [, setTick] = useState(0);\n  const update = useCallback(() => {\n    setTick(tick => tick + 1);\n  }, [])\n  return update;\n}\n\n/* -------------------------------------------------  define canvas  ------------------------------------------------- */\ninterface CanvasProps {\n    width: number;\n    height: number;\n}\n\n/* ----------------------------------------------  main function  start  ---------------------------------------------- */\nconst Map = ({ width, height }: CanvasProps) => {\n\n    const forceUpdate = useForceUpdate();\n\n    const [roverlocatex, setRoverlocateX] = useState<number[]>([0]);\n    const [roverlocatey, setRoverlocateY] = useState<number[]>([0]);\n\n    const [alienlocatex, setAlienlocateX] = useState<number[]>([0]);\n    const [alienlocatey, setAlienlocateY] = useState<number[]>([0]);\n    const [aliencolor, setAliencolor] = useState<string[]>([]);\n\n    const [radarlocatex, setRadarlocateX] = useState<number[]>([0]);\n    const [radarlocatey, setRadarlocateY] = useState<number[]>([0]);\n\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n\n    useEffect(() => {\n\n        const intervalId = setInterval(() => {\n\n        /* ------------------------------   obtain data from database - rover location   ------------------------------ */\n        const FetchRoverData = async () => {\n            try {\n                const res = await axios.get('https://us-central1-rover-back-end.cloudfunctions.net/rover_1')\n                setRoverlocateX((res.data)[0])\n                setRoverlocateY((res.data)[1])\n                // if(id_rover_array.indexOf((res.data)[0]['id']) == -1){\n                //     console.log(\"rover id update\")\n                //     id_rover_array.push((res.data)[0]['id'])\n                //     forceUpdate();\n                // }\n                // else {\n                //     console.log(\"rover id exist\")\n                // }\n            } \n            catch (error) {\n                console.log(\"error @ FetchRoverData @ map\", error)\n            }\n        }\n\n        /* ------------------------------   obtain data from database - alien location   ------------------------------ */\n        const FetchAlienData = async () => {\n            try {\n                const res1 = await axios.get('https://us-central1-rover-back-end.cloudfunctions.net/new_alien_app')\n                setAlienlocateX((res1.data)['x-axis'])\n                setAlienlocateY((res1.data)['y-axis'])\n                setAliencolor((res1.data)['color'])\n                console.log(\"check_alien_data\", (res1.data)['color'])\n                // if(id_alien_array.indexOf((res1.data)[0]['id']) == -1){\n                //     forceUpdate();\n                //     id_alien_array.push((res1.data)[0]['id'])\n                // }\n                // else {\n                //     console.log(\"alien id exist\")\n                // }\n            }\n            catch (error) {\n                console.log(\"error @ FetchAlienData @ map\", error)\n            }\n        }\n\n        const FetchRadarData = async () => {\n            try {\n                const res1 = await axios.get('https://us-central1-rover-back-end.cloudfunctions.net/radar')\n                setRadarlocateX((res1.data)['x-axis'])\n                setRadarlocateY((res1.data)['y-axis'])\n                console.log(\"check_map_rover_data\", (res1.data)['x-axis'], (res1.data)['y-axis'])\n            }\n            catch (error) {\n                console.log(\"error @ FetchRoverData @ map\", error)\n            }\n        }\n\n        /* ----------------------   obtain coordinates where image is displayed - rover location   ---------------------- */\n        var roverlocate_x = roverlocatex.toString().split(\"\")\n        var roverlocate_y = roverlocatey.toString().split(\"\")\n        if (rover_x!==5+parseInt(roverlocate_x.join(\"\")) || rover_y!==5+parseInt(roverlocate_y.join(\"\")) ){\n           // if (5+parseInt(roverlocate_x.join(\"\"))-x_previous>=20 || 5+parseInt(roverlocate_y.join(\"\"))-y_previous>=20 ) {\n            x_previous=rover_x\n            y_previous=rover_y}\n        //}\n        rover_x = canvas_initial_offset+Math.abs(parseInt(roverlocate_x.join(\"\"))*15)    //+5: make sure full image/circle is displayed\n        rover_y = canvas_initial_offset+Math.abs(parseInt(roverlocate_y.join(\"\"))*15)\n\n        /* ----------------------   obtain coordinates where image is displayed - alien location   ---------------------- */\n        var alienlocate_x = alienlocatex.toString().split(\"\")\n        var alienlocate_y = alienlocatey.toString().split(\"\")\n        alien_x = canvas_initial_offset+parseInt(alienlocate_x.join(\"\"))\n        alien_y = canvas_initial_offset+parseInt(alienlocate_y.join(\"\"))\n        var alien_color = aliencolor.toString().split(\"\")\n        color = alien_color.join(\"\")\n\n        /* -------------------------   radar   ------------------------*/\n        var radarlocate_x = radarlocatex.toString().split(\"\")\n        var radarlocate_y = radarlocatey.toString().split(\"\")\n        radar_x = canvas_initial_offset+parseInt(radarlocate_x.join(\"\"))\n        radar_y = canvas_initial_offset+parseInt(radarlocate_y.join(\"\"))\n        console.log(\"radar location to be drawn: \", radar_x, radar_y)\n\n        /* -------------------------   clear previous image & draw new image - rover location   -------------------------*/\n        if (canvasRef.current) {\n            var canvas = canvasRef.current;\n            var map_drawing = canvas.getContext('2d');  \n            var tmp_1 = {     //use to resize image\n                width: 0,\n                height:0 }\n            //forceUpdate();\n            var img = new Image();\n            img.src = 'image.png';\n            tmp_1.width=Math.floor(img.width * 0.04)\n            tmp_1.height=Math.floor(img.height * 0.04)\n            img.onload = function() {\n                // if(rover_x!==5 && rover_y!==5){\n                // if (rover_x-x_previous>=20 || rover_y-y_previous>=20 || rover_y==5 && rover_x==5 ) {\n                    map_drawing!.clearRect(x_previous, y_previous, tmp_1.width, tmp_1.height);\n                    console.log('clear: x_pre-',x_previous, 'y_pre-', y_previous)  // for debug\n                    map_drawing!.drawImage(img, rover_x, rover_y, tmp_1.width,  tmp_1.height);\n                    console.log('draw: x-',rover_x, 'y-', rover_y);  // for debug\n                //}\n            };\n\n            /* ------------------------   radar   -------------------------*/\n            var tmp_2 = {width: 0, height:0 }\n            var img_radar = new Image();\n            img_radar.src = 'alien_base.png';\n            tmp_2.width=Math.floor(img_radar.width * 0.05)\n            tmp_2.height=Math.floor(img_radar.height * 0.05)\n            img_radar.onload = function() {\n                if (radar_x!==canvas_initial_offset || radar_y!==canvas_initial_offset ) {\n                    map_drawing!.drawImage(img_radar, radar_x, radar_y, tmp_2.width,  tmp_2.height);\n                    console.log('radar_draw: x-',radar_x, 'y-', radar_y);  // for debug\n                }\n            };\n           \n            /* ------------------------   clear previous image & draw new image - alien location   ------------------------ */\n            if(map_drawing && (alien_x!==canvas_initial_offset || alien_y!==canvas_initial_offset)){\n                map_drawing.beginPath();\n                // console.log('color', color);  // for debug\n                if (color==='BUILDING'){\n                    map_drawing.rect(alien_x, alien_y, 5, 5);     //rectangular OR bulding drawing\n                    map_drawing.fillStyle = 'white'\n                } else {\n                    map_drawing.arc(alien_x, alien_y, 5, 0, 2*Math.PI);     //circle drawing\n                    map_drawing.fillStyle = color\n                }\n                map_drawing.fill();\n                map_drawing.stroke();\n            }   else {console.log('error loading contents')}\n        }       \n        FetchRadarData()\n        FetchRoverData()\n        FetchAlienData()\n        }, 250);\n        return () => clearInterval(intervalId); //This is important\n    } );\n\n    return (\n        <div>\n            <canvas ref={canvasRef} height={height} width={width} />\n        </div>\n    );\n};\n\n/* -------------------------------------------------  canvas size  ------------------------------------------------- */\nMap.defaultProps = {\n    width: 600,\n    height: 400,\n};\n\nexport default Map;","/Users/david/Desktop/mars_rover_command_front_end-5/src/components/Coordinates.tsx",["104","105","106"],[],"import React,{useState,useEffect} from 'react'\nimport axios from 'axios'\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nimport Avatar from '@mui/material/Avatar';\nimport './coordinates.css';\nimport Locate_alien from './locate_alien';\nimport Locate_rover from './locate_rover';\nimport Radar from './Radar';\n\n// const commonStyles = {\n//     bgcolor: 'background.paper',\n//     border: 4,\n//   };\n  \n\nconst Coordinates = () => {\n  /*                  -----------get location of aliens-----------                  */\n//   const [xaxis, setXaxis] = useState([]); //empty array\n//   const fetchData = async () => {\n//     const { data } = await axios.get('http://localhost:8000/alien');\n//     setXaxis(data);\n//   };\n//   useEffect(() => {     // Trigger the fetchData after the initial render by using the useEffect hook\n//     fetchData();\n//   }, [xaxis]);\n    var xaxis = (Locate_alien())\n    // console.log(\"location of alien recieved: \", xaxis)\n    var radar = (Radar())\n    console.log(\"location of radar recieved: \", radar)\n\n  /*                  ------------get location of rover------------                  */\n//   const [roverlocatex, setRoverlocateX] = useState([]);\n//   const [roverlocatey, setRoverlocateY] = useState([]);\n//   useEffect( ()=>{\n//     const fetchData = async () => {\n//         try {\n//             const res = await axios.get('http://localhost:8000/rover')\n//             setRoverlocateX((res.data)[0]['x-axis'])\n//             setRoverlocateY((res.data)[0]['y-axis'])\n//             console.log((res.data)[0]['y-axis'])\n//             console.log((res.data)[0]['x-axis'])\n//         } \n//         catch (error) {\n//             console.log(error)\n//         }\n//     }\n//     fetchData()\n// }, [] )\n    var roverlocate = Locate_rover()\n    var roverlocatex = roverlocate[0]\n    var roverlocatey = roverlocate[1]\n\n/*         ------------display locations in x & y coordinates------------           */\n    return (\n        <Grid>\n            {/* Rover_position */}\n            <Paper elevation={24} sx={{ height:100, marginLeft: 8, marginRight: 30, marginBottom: 2, background:'rgba(255,255,255,0.7)'}}>\n            <Grid container alignItems = \"center\" direction=\"row\" sx={{marginLeft: 1}}>\n                  <Grid>\n                <Avatar alt=\"Rover\" src=\"image.png\" />\n                </Grid> \n                \n                <Grid sx={{marginLeft: 1}}>\n                <h2>Rover Position: </h2>\n                </Grid>\n            \n            </Grid>\n            <Grid sx={{marginLeft: 1, marginBottom: 5}}>\n                <h2> x-axis: {roverlocatex} | y-axis: {roverlocatey}</h2>\n                </Grid>\n            </Paper>\n\n        {/* alien_position */}\n        <Paper elevation={24} sx={{ height:180, marginLeft: 8, marginRight: 30, marginBottom: 2, background:'rgba(255,255,255,0.8)'}}>\n            <Grid container alignItems = \"center\" direction=\"row\" sx={{marginLeft: 1}}>\n                <Grid>\n                <Avatar alt=\"Alien\" src=\"Alien.png\" />\n                </Grid>\n                <Grid sx={{marginLeft: 1}}>\n                <h2>Alien Position: </h2>\n                </Grid>   \n            </Grid>\n            <Grid sx={{marginLeft: 1}}>\n                {xaxis.length > 0 ? (\n                <div>\n                        {xaxis.map((x) => (\n                            <h2> x-axis: {x['x-axis']} | y-axis: {x['y-axis']} | color: {x['color']}</h2>\n                        ))}\n                </div>\n                ):( <h2 className=\"loading\">Loading... </h2>)}\n            </Grid> \n            </Paper>\n\n            <Paper elevation={24} sx={{ height:100, marginLeft: 8, marginRight: 30, background:'rgba(255,255,255,0.8)'}}>\n            <Grid container alignItems = \"center\" direction=\"row\" sx={{marginLeft: 1}}>\n                  <Grid>\n                <Avatar alt=\"Radar\" src=\"alien_base.png\" />\n                </Grid> \n                \n                <Grid sx={{marginLeft: 1}}>\n                <h2>Power Infrastructure Position: </h2>\n                </Grid>\n            \n            </Grid>\n            <Grid sx={{marginLeft: 1, marginBottom: 5}}>\n            {radar ? (\n                            <h2> x-axis: {radar['x-axis']} | y-axis: {radar['y-axis']}</h2>\n                ):( <h2 className=\"loading\">Loading... </h2>)}\n                </Grid>\n            </Paper>\n            \n      </Grid>\n      \n\n\n        \n   \n\n\n    )\n}\n\nexport default Coordinates","/Users/david/Desktop/mars_rover_command_front_end-5/src/components/Database.tsx",["107","108"],[],"/Users/david/Desktop/mars_rover_command_front_end-5/src/components/Mannual.tsx",[],[],"/Users/david/Desktop/mars_rover_command_front_end-5/src/components/Title.tsx",[],[],"/Users/david/Desktop/mars_rover_command_front_end-5/src/components/locate_rover.tsx",["109","110"],[],"import React,{useState,useEffect} from 'react'\nimport axios from 'axios'\n\nconst Locate_rover  = () => {\n\n    const [roverlocatex, setRoverlocateX] = useState([0]);\n    // const [roverlocatex, setRoverlocateX] = useState<number[]>([0]);\n    const [roverlocatey, setRoverlocateY] = useState([0]);\n    useEffect( ()=>{\n\n      const fetchData = async () => {\n          try {\n              const res = await axios.get('https://us-central1-rover-back-end.cloudfunctions.net/rover_1')\n              console.log(\"fetch original data from firebase: \", res)\n              setRoverlocateX((res.data)[0])\n              setRoverlocateY((res.data)[1])\n              //console.log(\"fetch x-axis from firebase: \", (res.data)[0])\n              //console.log(\"fetch y-axis from firebase: \", (res.data)[1])\n          } \n          catch (error) {\n              console.log(error)\n          }\n      }\n      fetchData()\n  }, [[roverlocatex,roverlocatey]] )\n\nreturn [roverlocatex,roverlocatey];}\n\nexport default Locate_rover","/Users/david/Desktop/mars_rover_command_front_end-5/src/components/locate_alien.tsx",["111"],[],"import React,{useState,useEffect} from 'react'\nimport axios from 'axios'\n\nconst Locate_alien  = () => {\n\nconst [xaxis, setXaxis] = useState([]); //empty array\nconst fetchData = async () => {\n    const { data } = await axios.get('https://us-central1-rover-back-end.cloudfunctions.net/alien_1');\n    setXaxis(data);\n};\nuseEffect(() => {     // Trigger the fetchData after the initial render by using the useEffect hook\n    fetchData();\n}, [xaxis]);\n\nreturn xaxis;}\n\nexport default Locate_alien","/Users/david/Desktop/mars_rover_command_front_end-5/src/components/Radar.tsx",["112"],[],"import React,{useState,useEffect} from 'react'\nimport axios from 'axios'\n\nconst Radar  = () => {\n\nconst [axis, setAxis] = useState([]); //empty array\nconst fetchData = async () => {\n    const { data } = await axios.get('https://us-central1-rover-back-end.cloudfunctions.net/radar');\n    setAxis(data);\n};\nuseEffect(() => {     // Trigger the fetchData after the initial render by using the useEffect hook\n    fetchData();\n}, [axis]);\n\nreturn axis;}\n\nexport default Radar","/Users/david/Desktop/mars_rover_command_front_end-5/src/components/Timer.tsx",["113"],[],"import React from 'react'\nimport { useState, useEffect } from 'react';\n\nconst Timer = (props:any) => {\n    const {initialSeconds = 0} = props;\n    const [seconds, setSeconds ] =  useState(initialSeconds);\n    useEffect(()=>{\n    let myInterval = setInterval(() => {\n                setSeconds(seconds + 1);\n        }, 1000)\n        return ()=> {\n            clearInterval(myInterval);\n          };\n    });\n\n    return (seconds)\n}\n\nexport default Timer;",[],"/Users/david/Desktop/mars_rover_command_front_end-5/src/components/timer.tsx",["114"],[],"/Users/david/Desktop/mars_rover_command_front_end-5/src/components/Signal.tsx",["115"],[],"/Users/david/Desktop/mars_rover_command_front_end-5/src/components/Battery_Level.tsx",[],[],{"ruleId":"116","severity":1,"message":"117","line":8,"column":10,"nodeType":"118","messageId":"119","endLine":8,"endColumn":16},{"ruleId":"116","severity":1,"message":"120","line":3,"column":8,"nodeType":"118","messageId":"119","endLine":3,"endColumn":14},{"ruleId":"116","severity":1,"message":"121","line":40,"column":11,"nodeType":"118","messageId":"119","endLine":40,"endColumn":22},{"ruleId":"116","severity":1,"message":"122","line":1,"column":15,"nodeType":"118","messageId":"119","endLine":1,"endColumn":23},{"ruleId":"116","severity":1,"message":"123","line":1,"column":24,"nodeType":"118","messageId":"119","endLine":1,"endColumn":33},{"ruleId":"116","severity":1,"message":"124","line":2,"column":8,"nodeType":"118","messageId":"119","endLine":2,"endColumn":13},{"ruleId":"116","severity":1,"message":"125","line":4,"column":8,"nodeType":"118","messageId":"119","endLine":4,"endColumn":18},{"ruleId":"116","severity":1,"message":"126","line":5,"column":8,"nodeType":"118","messageId":"119","endLine":5,"endColumn":29},{"ruleId":"116","severity":1,"message":"127","line":1,"column":8,"nodeType":"118","messageId":"119","endLine":1,"endColumn":13},{"ruleId":"128","severity":1,"message":"129","line":25,"column":7,"nodeType":"130","endLine":25,"endColumn":34},{"ruleId":"116","severity":1,"message":"127","line":1,"column":8,"nodeType":"118","messageId":"119","endLine":1,"endColumn":13},{"ruleId":"116","severity":1,"message":"127","line":1,"column":8,"nodeType":"118","messageId":"119","endLine":1,"endColumn":13},{"ruleId":"116","severity":1,"message":"127","line":1,"column":8,"nodeType":"118","messageId":"119","endLine":1,"endColumn":13},{"ruleId":"116","severity":1,"message":"127","line":1,"column":8,"nodeType":"118","messageId":"119","endLine":1,"endColumn":13},{"ruleId":"116","severity":1,"message":"131","line":6,"column":8,"nodeType":"118","messageId":"119","endLine":6,"endColumn":14},"@typescript-eslint/no-unused-vars","'status' is assigned a value but never used.","Identifier","unusedVar","'moment' is defined but never used.","'forceUpdate' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'IconButton' is defined but never used.","'BatteryCharging90Icon' is defined but never used.","'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","ArrayExpression","'Button' is defined but never used."]